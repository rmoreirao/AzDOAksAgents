# kubectl describe scaledjob azdevops-scaledjob -n azdo
# kubectl apply -f .\keda.yaml
# kubectl delete -f .\keda.yaml
# kubectl get scaledjob -n azdo
# kubectl get jobs -n azdo
# kubectl get pods -n azdo

apiVersion: v1
kind: Secret
metadata:
  name: azdevops
  namespace: azdo
stringData:
  AZP_TOKEN: {{ .Values.azdo.pat }}
  AZP_URL: {{ .Values.azdo.url }}
  AZP_POOL: {{ .Values.azdo.pool }}
---
apiVersion: keda.sh/v1alpha1
kind: TriggerAuthentication
metadata:
  name: pipeline-trigger-auth
spec:
  secretTargetRef:
    - parameter: personalAccessToken
      name: azdevops
      key: AZP_TOKEN
    - parameter: organizationURL
      name: azdevops
      key: AZP_URL
---
apiVersion: keda.sh/v1alpha1
kind: ScaledJob
metadata:
  name: azdevops-scaledjob
  namespace: azdo
spec:
  jobTargetRef:
    template:
      spec:
        nodeSelector:
          kubernetes.io/os: windows
        containers:
        - name: azdevops-agent-job
          image: {{.Values.container.registryUrl}}/{{.Values.container.imageName}}:{{.Values.container.imageTag}}
          imagePullPolicy: Always
          resources:
            requests:
              cpu: 2000m
              memory: 18000Mi
            limits:
              cpu: 4000m
              memory: 20000Mi
          env:
          - name: AZP_URL
            valueFrom:
              secretKeyRef:
                name: azdevops
                key: AZP_URL
          - name: AZP_TOKEN
            valueFrom:
              secretKeyRef:
                name: azdevops
                key: AZP_TOKEN
          - name: AZP_POOL
            valueFrom:
              secretKeyRef:
                name: azdevops
                key: AZP_POOL
          volumeMounts:
          - mountPath: /var/run/docker.sock
            name: docker-volume
        volumes:
        - name: docker-volume
          hostPath:
            path: /var/run/docker.sock
  pollingInterval: 30
  successfulJobsHistoryLimit: 0
  failedJobsHistoryLimit: 5
  minReplicaCount: 0
  maxReplicaCount: 10   
  scalingStrategy:
    strategy: "default"               
  triggers:
  - type: azure-pipelines
    metadata:
      poolName: {{ .Values.azdo.pool }}
      organizationURLFromEnv: "AZP_URL"
      personalAccessTokenFromEnv: "AZP_TOKEN"